## Docker image for building osmocom-bb (FreeRTOS platform)
## Formerly named plain 'Dockerfile' for legacy compatibility.

FROM debian:bookworm-slim AS base

ARG DEBIAN_FRONTEND=noninteractive

## Versions (override with --build-arg)
ARG FREERTOS_KERNEL_REPO="https://github.com/FreeRTOS/FreeRTOS-Kernel.git"
ARG FREERTOS_KERNEL_REF="V11.0.1"
ARG FREERTOS_TCP_REPO="https://github.com/FreeRTOS/FreeRTOS-Plus-TCP.git"
ARG FREERTOS_TCP_REF="V4.1.0"
ARG LIBOSMOCORE_REPO="https://github.com/makarkul/libosmocore.git"
ARG LIBOSMOCORE_REF="master"

ENV FREERTOS_DEPS_DIR=/workspace/deps/freertos \
    LIBOSMOCORE_DIR=/workspace/deps/libosmocore \
    FREERTOS_PORT=GCC_POSIX \
    PATH=/usr/local/bin:$PATH \
    LC_ALL=C.UTF-8 \
    LANG=C.UTF-8

## Base build tooling
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential pkg-config git ca-certificates automake autoconf libtool \
    python3 python3-pip zip unzip file xz-utils ccache cmake \
    gcc-arm-none-eabi gdb-multiarch \
    # Additional dependencies for osmocom-bb + VTY
    lua5.3 liblua5.3-dev libreadline-dev \
    && ln -s /usr/bin/aclocal /usr/bin/aclocal-1.17 || true \
    && ln -s /usr/bin/automake /usr/bin/automake-1.17 || true \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /workspace

## Fetch FreeRTOS dependencies
RUN mkdir -p "$FREERTOS_DEPS_DIR" && \
    git clone --depth 1 --branch "$FREERTOS_KERNEL_REF" "$FREERTOS_KERNEL_REPO" "$FREERTOS_DEPS_DIR/FreeRTOS-Kernel" && \
    git clone --depth 1 --branch "$FREERTOS_TCP_REF" "$FREERTOS_TCP_REPO" "$FREERTOS_DEPS_DIR/FreeRTOS-Plus-TCP" && \
    mkdir -p "$FREERTOS_DEPS_DIR/include/portable/GCC" && \
    ln -sf "$FREERTOS_DEPS_DIR/FreeRTOS-Kernel/include" "$FREERTOS_DEPS_DIR/include/kernel" && \
    ln -sf "$FREERTOS_DEPS_DIR/FreeRTOS-Plus-TCP/source/include" "$FREERTOS_DEPS_DIR/include/tcp" && \
    ln -sf "$FREERTOS_DEPS_DIR/FreeRTOS-Kernel/portable/GCC/POSIX" "$FREERTOS_DEPS_DIR/include/portable/GCC/POSIX"

## Clone and build libosmocore (FreeRTOS-adapted fork)
RUN git clone "$LIBOSMOCORE_REPO" "$LIBOSMOCORE_DIR"

## Create basic FreeRTOSConfig.h required for FreeRTOS builds
RUN mkdir -p "$FREERTOS_DEPS_DIR/config" && \
    cat > "$FREERTOS_DEPS_DIR/config/FreeRTOSConfig.h" <<'EOF'
#ifndef FREERTOS_CONFIG_H
#define FREERTOS_CONFIG_H
#define configUSE_PREEMPTION                    1
#define configUSE_IDLE_HOOK                     0
#define configUSE_TICK_HOOK                     0
#define configCPU_CLOCK_HZ                      ( ( unsigned long ) 1000000 )
#define configTICK_RATE_HZ                      ( ( TickType_t ) 1000 )
#define configMAX_PRIORITIES                    ( 56 )
#define configMINIMAL_STACK_SIZE                ( ( unsigned short ) 128 )
#define configTOTAL_HEAP_SIZE                   ( ( size_t ) ( 65 * 1024 ) )
#define configMAX_TASK_NAME_LEN                 ( 16 )
#define configUSE_TRACE_FACILITY                0
#define configUSE_16_BIT_TICKS                  0
#define configIDLE_SHOULD_YIELD                 1
#define configUSE_MUTEXES                       1
#define configQUEUE_REGISTRY_SIZE               8
#define configCHECK_FOR_STACK_OVERFLOW          0
#define configUSE_RECURSIVE_MUTEXES             1
#define configUSE_MALLOC_FAILED_HOOK            0
#define configUSE_APPLICATION_TASK_TAG          0
#define configUSE_COUNTING_SEMAPHORES           1
#define configGENERATE_RUN_TIME_STATS           0
#define ipconfigUSE_NETWORK_EVENT_HOOK          1
#define ipconfigUDP_MAX_SEND_BLOCK_TIME_TICKS   ( 5000 / portTICK_PERIOD_MS )
#define ipconfigUDP_MAX_RX_PACKETS              0
#define ipconfigALLOW_SOCKET_SEND_WITHOUT_BIND  1
#define ipconfigNUM_NETWORK_BUFFER_DESCRIPTORS  45
#define ipconfigEVENT_QUEUE_LENGTH              ( ipconfigNUM_NETWORK_BUFFER_DESCRIPTORS + 5 )
#define INCLUDE_vTaskPrioritySet                1
#define INCLUDE_uxTaskPriorityGet               1
#define INCLUDE_vTaskDelete                     1
#define INCLUDE_vTaskCleanUpResources           1
#define INCLUDE_vTaskSuspend                    1
#define INCLUDE_vTaskDelayUntil                 1
#define INCLUDE_vTaskDelay                      1
#endif /* FREERTOS_CONFIG_H */
EOF

RUN cd "$LIBOSMOCORE_DIR" && \
    echo '1.9.0-freertos' > .tarball-version && \
    autoreconf -fi && \
    mkdir -p build-freertos && cd build-freertos && \
    ../configure \
        --enable-freertos \
        --enable-pseudotalloc \
        --enable-vty \
        --disable-gsmtap \
        --disable-gb \
        --disable-libsctp \
        --disable-libusb \
        --disable-multicast \
        --disable-ctrl \
        --disable-serial \
        --disable-msgfile \
        --disable-uring \
        --disable-pcsc \
        --disable-utilities \
        --disable-gnutls \
        --disable-libmnl \
        --host="$(uname -m)-linux-gnu" \
        CFLAGS="-DHAVE_STRUCT_SOCKADDR_STORAGE=1" && \
    make -j"$(nproc)" && make install && \
    for pc in /usr/local/lib/pkgconfig/libosmo*.pc; do \
        [ -f "$pc" ] || continue; \
        sed -i -E 's/(Requires(\.private)?[:].*)talloc[ ,]?/\1/g' "$pc"; \
        sed -i -E 's/, *talloc//g' "$pc"; \
        sed -i -E 's/talloc, *//g' "$pc"; \
    done

COPY scripts/freertos_env.sh /workspace/scripts/
RUN chmod +x /workspace/scripts/freertos_env.sh

WORKDIR /workspace

ENTRYPOINT ["/bin/bash", "-lc"]
CMD ["echo", "FreeRTOS container ready. Run 'docker compose run shell'."]
